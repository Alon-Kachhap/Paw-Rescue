generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String   @id @default(uuid())
  email          String   @unique
  password       String
  firstName      String
  lastName       String
  phone          String
  image          String?    // Cloudflare R2 (optional)
  about          String
  referral       ReferralSource
  street         String
  city           String
  state          String
  zip            String
  role           Role        @default(VOLUNTEER)
  publicProfile  Boolean     @default(false)  // Controls whether profile is visible to public
  organization   Organization? @relation("OrgVolunteers", fields: [organizationId], references: [id])
  organizationId String?
  animals        Animal[]    @relation("CreatedBy")
  uploads        Media[]    @relation("UploadedBy")
  stories        VolunteerStory[] @relation("VolunteerStories")
  createdAt      DateTime    @default(now())
}

model Organization {
  id                 String   @id @default(uuid())
  name               String
  password            String
  type               String
  registrationNumber String   @unique
  email              String   @unique
  phone              String
  verified    Boolean  @default(false)
  address            String
  website            String?
  mission            String
  description        String
  facebook           String?
  twitter            String?
  instagram          String?
  documentUrl        String?   // Cloudflare R2 (optional)
  volunteers         User[]    @relation("OrgVolunteers")
  contentBlocks      SiteContentBlock[]
  media              Media[]   @relation("OrgMedia")
  createdAt          DateTime  @default(now())
}

model Animal {
  id          String   @id @default(uuid())
  name        String
  species     String
  breed       String?
  vaccinated  Boolean
  neutered    Boolean
  image       String?  // Cloudflare R2 (optional)
  description String?  // Animal description
  contactPhone String? // Contact phone number
  status      AnimalStatus @default(ADOPTION)
  media       Media[]  @relation("AnimalMedia")
  createdBy   User     @relation("CreatedBy", fields: [createdById], references: [id])
  createdById String
  createdAt   DateTime @default(now())
}

model SiteContentBlock {
  id             String      @id @default(uuid())
  type           ContentType
  content        String
  organization   Organization @relation(fields: [organizationId], references: [id])
  organizationId String
  createdAt      DateTime    @default(now())
}

model VolunteerRegistration {
  id             String   @id @default(uuid())
  firstName      String
  lastName       String
  email          String   @unique
  password       String
  phone          String
  street         String
  city           String
  state          String
  zip            String
  aboutYourself  String
  referral       ReferralSource
  verified       Boolean  @default(false)
  createdAt      DateTime @default(now())
}

model Media {
  id             String   @id @default(uuid())
  url            String
  fileKey        String
  fileName       String?
  fileType       String?
  size           Int?
  folder         String   @default("general")
  uploadedBy     User?    @relation("UploadedBy", fields: [userId], references: [id])
  userId         String?
  organization   Organization? @relation("OrgMedia", fields: [organizationId], references: [id])
  organizationId String?
  animal         Animal?   @relation("AnimalMedia", fields: [animalId], references: [id])
  animalId       String?
  createdAt      DateTime @default(now())
}

model VolunteerStory {
  id          String   @id @default(uuid())
  title       String
  authorName  String
  date        DateTime
  image       String?  // Cloudflare R2 (optional)
  excerpt     String
  content     String   @db.Text
  slug        String   @unique
  featured    Boolean  @default(false)
  volunteer   User?    @relation("VolunteerStories", fields: [volunteerId], references: [id])
  volunteerId String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

enum Role {
  VOLUNTEER
  ORGANIZATION
  ADMIN
}

enum ReferralSource {
  social_media
  friend
  website
  event
  other
}

enum ContentType {
  banner
  cta
  gallery
  text
}

enum AnimalStatus {
  FOSTER
  ADOPTION
  STREET
  OTHER
}
